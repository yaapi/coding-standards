<?xml version="1.0"?>
<ruleset name="YaAPI">
    <description>YaAPI coding standards.</description>

    <!-- Include some additional sniffs for CodeAnalysis. -->
    <rule ref="Generic.CodeAnalysis.ForLoopShouldBeWhileLoop" />
    <rule ref="Generic.CodeAnalysis.ForLoopWithTestFunctionCall" />
    <rule ref="Generic.CodeAnalysis.JumbledIncrementer" />
    <rule ref="Generic.CodeAnalysis.UnnecessaryFinalModifier" />
    <rule ref="Generic.CodeAnalysis.UselessOverridingMethod" />

    <!-- Include some additional sniffs for Files. -->
    <rule ref="Generic.Files.ByteOrderMark" />
    <rule ref="Generic.Files.LineEndings">
        <properties>
            <property name="eolChar" value="\n" />
        </properties>
    </rule>
    <rule ref="Generic.Files.LineLength">
        <properties>
            <property name="lineLimit" value="150" />
            <property name="absoluteLineLimit" value="0" />
        </properties>
    </rule>
    <rule ref="Generic.Files.OneClassPerFile" />
    <rule ref="Generic.Files.OneInterfacePerFile" />
    <rule ref="Generic.Files.OneTraitPerFile" />
    <rule ref="Zend.Files.ClosingTag" />
    <rule ref="PSR2.Files.EndFileNewline" />

    <!-- Include some additional sniffs for NamingConventions. -->
    <rule ref="Generic.NamingConventions.ConstructorName" />
    <rule ref="Generic.NamingConventions.UpperCaseConstantName" />
    <rule ref="PEAR.NamingConventions.ValidClassName" />

    <!-- Include some additional sniffs for Classes. -->
    <rule ref="PEAR.Classes.ClassDeclaration" />
    <rule ref="Squiz.Classes.SelfMemberReference" />

    <!-- Include some additional sniffs for ControlStructures. -->
    <rule ref="Generic.ControlStructures.InlineControlStructure" />
    <rule ref="PSR2.ControlStructures.ElseIfDeclaration" />
    <rule ref="PSR2.ControlStructures.ElseIfDeclaration.NotAllowed">
        <type>error</type>
    </rule>
    <rule ref="PEAR.ControlStructures.MultiLineCondition">
        <exclude name="PEAR.ControlStructures.MultiLineCondition.NewlineBeforeOpenBrace"/>
    </rule>
    
    <!-- Include some additional sniffs for Arrays. -->
    <rule ref="Generic.Arrays.DisallowLongArraySyntax" />
    <rule ref="Squiz.Arrays.ArrayDeclaration" />

    <!-- Include some additional sniffs for PHP. -->
    <rule ref="Generic.PHP.DisallowShortOpenTag" />
    <rule ref="Generic.PHP.ForbiddenFunctions" />
    <rule ref="Generic.PHP.DeprecatedFunctions" />
    <rule ref="Generic.PHP.LowerCaseConstant" />
    <rule ref="Generic.PHP.LowerCaseKeyword" />
    <rule ref="Squiz.PHP.CommentedOutCode" />
    <rule ref="Squiz.PHP.GlobalKeyword">
        <message>Do not use global variables; Use static class properties or constants.</message>
    </rule>

    <!-- Include some additional sniffs for Functions. -->
    <rule ref="Generic.Functions.FunctionCallArgumentSpacing">
      <exclude name="Generic.Functions.FunctionCallArgumentSpacing.TooMuchSpaceAfterComma" />
    </rule>
    <rule ref="PEAR.Functions.FunctionCallSignature">
        <exclude name="PEAR.Functions.FunctionCallSignature.CloseBracketLine" />
    </rule>
    <rule ref="PEAR.Functions.FunctionDeclaration" />
    <rule ref="PEAR.Functions.ValidDefaultValue" />

    <!-- Include some additional sniffs for Formatting. -->
	<rule ref="Generic.Formatting.DisallowMultipleStatements" />
	<rule ref="Generic.Formatting.SpaceAfterCast" />
	<rule ref="PEAR.Formatting.MultiLineAssignment" />

    <!-- Include some additional sniffs for Commenting. -->
    <rule ref="PEAR.Commenting.InlineComment" />
    <rule ref="Squiz.Commenting.BlockComment">
        <exclude name="Squiz.Commenting.BlockComment.FirstLineIndent"/>
        <exclude name="Squiz.Commenting.BlockComment.LineIndent"/>
        <exclude name="Squiz.Commenting.BlockComment.LastLineIndent"/>
        <exclude name="Squiz.Commenting.BlockComment.HasEmptyLineBefore"/>
        <exclude name="Squiz.Commenting.BlockComment.NoEmptyLineBefore"/>
        <exclude name="Squiz.Commenting.BlockComment.NoEmptyLineAfter"/>
    </rule>
    <rule ref="Squiz.Commenting.DocCommentAlignment" />
    <rule ref="Squiz.Commenting.VariableComment">
        <exclude name="Squiz.Commenting.VariableComment.TagNotAllowed" />
    </rule>

    <!-- Include some additional sniffs for Strings. -->
    <rule ref="Generic.Strings.UnnecessaryStringConcat">
        <properties>
            <property name="allowMultiline" value="true"/>
        </properties>
    </rule>
    <rule ref="Squiz.Strings.ConcatenationSpacing">
        <properties>
            <property name="spacing" value="1" />
            <property name="ignoreNewlines" value="true" />
        </properties>
    </rule>

    <!-- Include some additional sniffs for Operators. -->
    <rule ref="Squiz.Operators.IncrementDecrementUsage">
        <!-- <exclude name="Squiz.Operators.IncrementDecrementUsage.processAssignment" /> -->
    </rule>

    <!-- Include some additional sniffs for Scope. -->
    <rule ref="Squiz.Scope.StaticThisUsage" />
    <rule ref="Squiz.Scope.MemberVarScope" />
    <rule ref="Squiz.Scope.MethodScope" />

    <!-- Include some additional sniffs for WhiteSpace. -->
    <rule ref="Generic.WhiteSpace.DisallowTabIndent" />
    <rule ref="Generic.WhiteSpace.ScopeIndent" />
    <rule ref="PEAR.WhiteSpace.ObjectOperatorIndent" />
    <rule ref="Squiz.WhiteSpace.ScopeClosingBrace" />
    <rule ref="Squiz.WhiteSpace.CastSpacing" />
    <rule ref="Squiz.WhiteSpace.ControlStructureSpacing" />
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace" />
    <rule ref="Squiz.WhiteSpace.SemicolonSpacing" />
    <rule ref="Squiz.WhiteSpace.OperatorSpacing">
        <properties>
            <property name="ignoreNewlines" value="true" />
        </properties>
    </rule>

    <!-- Include some additional sniffs for CSS. -->
    <rule ref="Squiz.CSS.ColonSpacing" />
    <rule ref="Squiz.CSS.DuplicateClassDefinition" />
    <rule ref="Squiz.CSS.EmptyClassDefinition" />
    <rule ref="Squiz.CSS.EmptyStyleDefinition" />
    <rule ref="Squiz.CSS.MissingColon" />
    <rule ref="Squiz.CSS.SemicolonSpacing" />
</ruleset>